FROM ubuntu:noble


ENV PATH=$PATH:/ops
ENV VIRTUAL_ENV=/opt/venv
ENV PATH="${VIRTUAL_ENV}/bin:${PATH}"

ENV AWS_PAGER=""


RUN apt-get update \
&& apt-get install -y --no-install-recommends \
gcc libblas-dev libatlas-base-dev libxml2-dev libxslt1-dev libssl-dev libffi-dev \
# Certbot
certbot \
# Pyodbc
unixodbc unixodbc-dev \
# Mysql
#default-libmysqlclient-dev \
pkg-config \
# Utils
curl jq yq git maven gradle zip unzip \
# NodeJS
nodejs npm \
# Docker
ca-certificates \
# Debug
iputils-ping \
# Java
openjdk-21-jdk \
# Go
golang \
# Python
python3 python3-pip python3-venv python3-dev python3-wheel python3-build python3-setuptools python3-certbot-nginx \
&& ln /usr/bin/python3 /usr/bin/python \
#&& pip install build twine \
# Gitlab
# && curl -s https://raw.githubusercontent.com/profclems/glab/trunk/scripts/install.sh | bash \
# && curl --location --output /usr/local/bin/release-cli "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/packages/generic/release-cli/latest/release-cli-linux-amd64" \
# && chmod +x /usr/local/bin/release-cli \
# SOPS
&& curl -Lo sops.deb "https://github.com/getsops/sops/releases/download/v3.10.2/sops_3.10.2_amd64.deb" \
&& apt --fix-broken install ./sops.deb \
&& rm -rf sops.deb \
# MS SQLserver
# && curl https://packages.microsoft.com/keys/microsoft.asc | tee /etc/apt/trusted.gpg.d/microsoft.asc \
# && curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | tee /etc/apt/sources.list.d/mssql-release.list \
# && apt-get update \
# && ACCEPT_EULA=Y apt-get install -y msodbcsql17
&& install -m 0755 -d /etc/apt/keyrings \
&& curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc \
&& chmod a+r /etc/apt/keyrings/docker.asc \
&& echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
$(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
tee /etc/apt/sources.list.d/docker.list > /dev/null \
# AWS
# && curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
# && unzip awscliv2.zip \
# && ./aws/install \
&& apt-get update \
&& apt-get install -y --no-install-recommends \
# Docker
docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin \
# OpenSSH
openssh-client

WORKDIR /ops

COPY functions/ /ops/functions/
COPY pipeline.sh gitlab-entrypoint.sh /ops/

RUN git config --global --add safe.directory /workspaces \
&& chmod +x /ops/*.sh /ops/functions/*.sh /ops/functions/*.py
WORKDIR /workspaces

ENTRYPOINT [ "gitlab-entrypoint.sh" ]
